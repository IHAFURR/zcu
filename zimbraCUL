#!/usr/bin/perl -w

use Time::Local;
use Time::localtime;

use IO::Select;
use IPC::Open3;
use locale;
use strict;
# модуль перевода с украинского на английский
# сам модуль немного изменен - из него удалены символы "`" , чтобы название почты не содержало спецсимволов
use Lingua::Translit;


my @weekDay = ("Sun", "Mod", "Tue", "Wed", "Thu", "Fri", "Sat");
my $retval = time;
my ($sec, $min, $hour, $day, $mon, $year, $wday) = gmtime(time);
$year += 1900;
$mon += 1;
$hour += 2;
# Переменная с датой, для создания еrror и log файлов 
my $errData = "$day$mon$year";

print "=========================================\n";
print "    $day/$mon/$year  $hour:$min:$sec $weekDay[$wday] \n";
print "=========================================\n";

##################################################

# CSV файл с которого считываются данные о пользователях
open (STUD_FILE, "16_17-12-09utf8.csv") or die "$!\n";
#open (STUD_FILE, ".csv") || ("CSV file can not be opened\n");

#logFile + errData
my $logFile = "logFile$errData.dat";
#Error file с пользователями которые уже существуют в базе.
my $errorEx = "errorExist$errData.csv";
#Error file с пользователями у которых емейл уже занят, но их нету в базе. Создавать отдельно.
my $errorNot = "errorNotAdded$errData";

my $ERCount = 0;
my $NotCount = 0;
my $createdCount = 0;
my $existCount = 0;
my $amount = 0;

my $ldUrl = "";
my $ldPass = "";
                                                                          
# Student COS from Zimbra
my $cosId = `su - zimbra -c 'zmprov gc student |grep zimbraId:'`;
$cosId =~ s/zimbraId:\s*|\s*$//g;

#################################################
# uid array and hasharray with uid and mail. Using to compare with UID form file 
my @arrUID = "";
my %hashUID = ();

open(STUDID, "UIDMAIL.csv") or die ("File can not be opened, $!\n");
    while (my $line = <STUDID>) {
        chomp($line);
        my ($uid, $mail) = split(/\;/, $line);
        push(@arrUID, $uid);
        $hashUID{$uid} = $mail;
}

my $arruid = @arrUID;
open (LOGFILE, ">>$logFile") or die "File $logFile can not be opened: $!\n";
print LOGFILE "Script starting  $day/$mon/$year/n file testAllZUid.csv was opened and contain 
$arruid uid notes\n";


#open file with student information for update and add user to zimbra
while (my $line = <STUD_FILE>) {
    chomp($line);

    #Поля присваиваюсть переменым из файла 2015-2016,  проверять перед запуском
    # CHANGE ME: To the actual fields you use in your CSV file
    #my ($student_uid, $password, $name) = split(/\,/, $line, 3);
    my ($n, $student_uid, $name, $nameE, $stat, $country, $lang,
        $var12, $var13, $var14, $year, $date1, $date2,  $kafedr,
        $group, $group1, $course) = split(/\;/, $line);

#print ("student №: $n student uid: $student_uid name: $name group: $group1 kafedr: $kafedr\n");
#print ("var5: $var5 \n stat: $stat \n var7: $var7 \n country: $country \n city: $city \n number: $number \n");
#print ("lenguege: $var11 \n year: $year \n date1: $date1 \n date2: $date2 \n fullGroup: $fullGroup \n group: $group \n group2: $group1 \n course: $course \n");

#password and domain for creatting and checking student info
my $password = "Pass12344321";
#    my $domain = "";
my $domain = "";
my $countr = "Україна";
my $city = "Херсон";
my $univers = "ХНТУ";
my $title = "студент";	

my ($first, $last, $middle) = split(/ /, $name, 3);
my $tr = new Lingua::Translit("GOST 7.79 UKR");
my $zimbramail;
my $last_tr;
my $first_tr;

# транслитерация фамилии и имени на английский
if ($tr->can_reverse()) {
    $last_tr = $tr->translit($last);
    $first_tr = $tr->translit($first);
}

$last_tr =~ s/[\$\#\@\~\!\&\*\(\)\[\]\;\.\,\:\^\ \-\+\=\_\|\{\}\?\%\№\’\"\“\”\'\`\\\/]+//g;
$first_tr =~ s/[\$\#\@\~\!\&\*\(\)\[\]\;\.\,\:\^\ \-\+\=\_\|\{\}\?\%\№\’\"\“\”\'\`\\\/]+//g;

$zimbramail = $first_tr.'.'.$last_tr;
$zimbramail = "\L$zimbramail"."\@$domain";

print "$zimbramail :: $n\n";

my($write, $read, $error) = ('', '', '');

# получение данных о выполнении команды. Команда ищет статус акаунта пользователя.
# если пользователь есть - будет получен статус, если нет - выведется ошибка
my $pid = open3($write, $read, $error,"su - zimbra -c \"ldapsearch -H $ldUrl -w $ldPass -D uid=zimbra,cn=admins,cn=zimbra -x -LLL \'(&(mail=$zimbramail))\' zimbraAccountStatus\" |grep zimbraAccountStatus"); 

my $selread = IO::Select->new();
my $selerr = IO::Select->new();
my($print_err, $print_answer) = ('','');

$selread->add($read);
$selerr->add($error);

if ($selread->can_read()) {
#print "ready->read\n";
}
if ($selerr->can_read()) {
#print "ready->error\n";
}

sysread($error, $print_err, 4096 ) if $selerr->can_read(0);
if($print_err){print "Err: print_err \n"}

    # перевод ответа от выполненной команды в текстовую переменную
    sysread($read,$print_answer,4096) if $selread->can_read(0);

    if(!$print_answer) {
	# если была ошибка при поиске пользователя - пользователя нет, и он добавляется в базу
	# проверка, если пользлватель сменил фамилию либо имя, возможно он есть уже в базе.
	# Проверяем его ID, если есть в базе то записуем в файл, если нет то цикл продолжаеться.
	if ($student_uid ~~ @arrUID) {
	#	print "ERROR!! Such UID already exist $n $student_uid\n";
	    open (ERROREX, ">>$errorEx") or die "$!\n";
	    print ERROREX "$zimbramail;$student_uid;$hashUID{$student_uid}\n";
	    open (LOGFILE, ">>$logFile") or die "$!\n";
	    print LOGFILE "User already exist $student_uid;$hashUID{$student_uid}\n";
	    $ERCount++;
	} else {
            print "User not found. Create new user:\n";
	    print "Creating new User $n $zimbramail $group1\n";	
	    #НАСТРОЙКА ДОБАВЛЕНИЯ ТУТ !!!!

	    #сложить команды для добавления пользователя в файл и выполнить через cmd команду
            #в таком случае пользователь добавляется в течении 20-30 секунд
            #если вызывать команды из скрипта - то на добавление пользователя уходит 2-3 минуты
            open(TEMP, ">/tmp/tempfile.dat") or die('TempFile can not be opened');
                print TEMP "ca $zimbramail $password\n";
		print TEMP "ma $zimbramail facsimileTelephoneNumber \"$student_uid\"\n";
		print TEMP "ma $zimbramail zimbraCOSId \"$cosId\"\n";
		print TEMP "ma $zimbramail givenName \"$last\"\n";
                print TEMP "ma $zimbramail sn \"$first\"\n";
		print TEMP "ma $zimbramail initials \"$middle\"\n"; 
		print TEMP "ma $zimbramail displayName \"$first $last\"\n";
		print TEMP "ma $zimbramail company \"$univers\"\n";
		print TEMP "ma $zimbramail l \"$city\"\n"; 
                print TEMP "ma $zimbramail co \"$countr\"\n"; 
		print TEMP "ma $zimbramail title \"$title\"\n"; 
#		print TEMP "ma $zimbramail description \"$group1\"\n";
		print TEMP "ma $zimbramail zimbraPasswordMustChange TRUE";
		close(TEMP);

            my $user_create = `su - zimbra -c 'zmprov -f /tmp/tempfile.dat'`;
	    open (LOGFILE, ">>$logFile") or die "$!\n";
            print LOGFILE "User $zimbramail;$group was created\n";
	    $createdCount++;
	}
    } else {
	# если пользователь найден в базе
	print "User exist $n $zimbramail\n";

	my ($write, $read, $error) = ('', '', '');
	$pid = open3($write, $read, $error, "su - zimbra -c \"ldapsearch -H $ldUrl -w $ldPass -D uid=zimbra,cn=admins,cn=zimbra -x -LLL \'(&(mail=$zimbramail))\' facsimileTelephoneNumber\" |grep facsimileTelephoneNumber" );  #Получаем facsimeleTelphoneNumber
        my $selread = IO::Select->new();
        my $selerr = IO::Select->new();
        my ($print_err, $print_answer) = ("". "");

	$selread->add($read);
 	$selerr->add($error);

    	sysread($error, $print_err, 4096) if $selerr->can_read(0);
    	my @arr = ();
    	while (sysread($read, $print_answer, 4096)) {
	    if ($selread->can_read()) {
	        push(@arr, $print_answer);
	    }
	}

    	my $answ = "";
	foreach(@arr) {
	    if (index($_, "facsimileTelephoneNumber") != -1 ) {
	        $answ = $_;
	        $answ =~ s/\n//g;
	        $answ =~ s/facsimileTelephoneNumber: //g;
	        print "$zimbramail -> $answ\n";

		# Проверяем если ID с файла с ID из Zimbra, если совпадают, то обновляем
		if($answ == $student_uid){
		    print "User found: $n $zimbramail $answ $student_uid\n";
		    # ОБНОВЛЯТЬ ТУТУ!!!!!
		    #open(UpdFile, ">/tmp/tempfile2.dat") or die ('TempFile can not be opened\n');
		    #print UpdFile "ma $zimbramail givenName \"$last\"\n";
		    #print UpdFile "ma $zimbramail description \"\"\n";
	            #print UpdFile "ma $zimbramail company \"$univers\"\n";
               	    #print UpdFile "ma $zimbramail sn \"$first\"\n";
                    #print UpdFile "ma $zimbramail initials \"$middle\"\n";
                    #print UpdFile "ma $zimbramail displayName \"$first $last\"\n";
		    #print UpdFile "ma $zimbramail l \"$city\"\n";	
		    #print UpdFile "ma $zimbramail co \"$countr\"\n";
		    #print UpdFile "ma $zimbramail title \"$title\"\n";	

		    #print "all ok $n $zimbramail $group\n";
		    #my $user_update = `su - zimbra -c 'zmprov -f /tmp/tempfile2.dat'`;
		    open(LOGFILE, ">>$logFile") or die "File can not be opened: $!\n";
        	    print LOGFILE "Error. User $zimbramail already exists.\n";
		    $existCount++;
	        } elsif ($answ != $student_uid){
		    #print "Error with user $n $zimbramail $answ $student_uid\n";
		    # создание CSV файла, где будут складываться пользователи, которые не могли быть добавлены в базу
        	    open(ERRFILE, ">>$errorNot") or die('Err_File can not be opened');
        	    print ERRFILE "User $zimbramail have $answ from zimbra and $student_uid from file EDBO\n";
		    open(LOGFILE, ">>$logFile") or die "File can not be closed: $!\n";
		    print LOGFILE "User $zimbramail can not be created. This email already exist.\n";
		    $NotCount++;
		} 
	    } else {
	        #open(UPD, ">/tmp/utempfile.dat") or die('TempFile can not be opened');
                #print UPD "ma $zimbramail facsimileTelephoneNumber \"$student_uid\"\n";
                #print UPD "ma $zimbramail zimbraCOSId \"$cosId\"\n";
                #print UPD "ma $zimbramail givenName \"$last\"\n";
                #print UPD "ma $zimbramail sn \"$first\"\n";
                #print UPD "ma $zimbramail initials \"$middle\"\n";
                #print UPD "ma $zimbramail displayName \"$first $last\"\n";
                #print UPD "ma $zimbramail company \"$univers\"\n";
                #print UPD "ma $zimbramail l \"$city\"\n";
                #print UPD "ma $zimbramail co \"$countr\"\n";
                #print UPD "ma $zimbramail title \"$title\"\n";
                #print UPD "ma $zimbramail description \"\"\n";

                #my $user_upd = `su - zimbra -c 'zmprov -f /tmp/utempfile.dat'`;
                open (LOGFILE, ">>$logFile") or die "$!\n";
                print LOGFILE "User $zimbramail cant find uid: \n";
                $existCount++;
		#print "User $n $zimbramail was updated $student_uid\n";
	    }
	} 
    }

    ($error) = ('');

    # остановка процесса, чтобы он не зависал в памяти
    waitpid($pid, 0);
} 

open(LOGFILE, ">>$logFile") or die "FIle can not be opened\n";
print LOGFILE "######################################\n";

print LOGFILE "Created: $createdCount\n";
print LOGFILE "Exist  : $existCount\n";
print LOGFILE "Not add: $NotCount\n";
print LOGFILE "Error  : $ERCount\n";
$amount = $ERCount + $NotCount + $createdCount + $existCount;
print LOGFILE "Amount : $amount\n";
print "##########################################\n";
